// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© aminmasood54

//@version=5
strategy("RSI From Pivot",overlay = false,
         default_qty_type = strategy.percent_of_equity,default_qty_value = 100,
         commission_type = strategy.commission.percent,commission_value = 0.02,precision=5)
len = input.int(defval = 10,title = 'Length')
smaLen = input.int(defval = 10,title = 'SmaLen')
SLPercent = input.float(defval = 2,title = 'SL Percent',step = 1)
TPPercent = input.float(defval = 2,title = 'TP Percent',step = 1)
pine_sma(x, y) =>
    sum = 0.0
    for i = 0 to y - 1
        sum := sum + x[i] / y
    sum

pine_rma(src, length) =>
    alpha = 1/length
    sum = 0.0
    sum := na(sum[1]) ? pine_sma(src, length) : alpha * src + (1 - alpha) * nz(sum[1])


H = ta.pivothigh(high,len,len)
L = ta.pivotlow(high,len,len)
nH = ta.barssince(na(H)==false)
nL = ta.barssince(na(L)==false)
rsiL = 0.0
rsiH = 0.0
if nH>1
    upH = pine_rma(math.max(ta.change(high), 0), nH)
    downH = pine_rma(-math.min(ta.change(high), 0), nH)
    rsiH := downH == 0 ? 100 : upH == 0 ? 0 : 100 - (100 / (1 + upH / downH))
else
    rsiH := rsiH[1]
if nL>1
    upL = pine_rma(math.max(ta.change(low), 0), nL)
    downL = pine_rma(-math.min(ta.change(low), 0), nL)
    rsiL := downL == 0 ? 100 : upL == 0 ? 0 : 100 - (100 / (1 + upL / downL))
else
    rsiL := rsiL[1]
A = ta.sma((rsiH+rsiL)/2,smaLen)
plot(A,color = color.red,linewidth = 2)
hline(30,title = 'Overslod',linestyle = hline.style_dashed)
hline(70,title = 'Overslod',linestyle = hline.style_dashed)

LCond = ta.crossover(A,30)
SCond = ta.crossunder(A,70)
SLL = 0.0
SLS = 0.0
TPL = 0.0
TPS = 0.0
LEON = strategy.position_size>0
SEON = strategy.position_size<0
if LCond
    strategy.entry('Long',strategy.long)
    SLL := close*(1-SLPercent/100)
    TPL := close*(1+TPPercent/100)
if LEON
    SLL := SLL[1]
    TPL := TPL[1]
if SCond
    strategy.entry('Short',strategy.short)
    SLS := close*(1+SLPercent/100)
    TPS := close*(1-TPPercent/100)
if SEON
    SLS := SLS[1]
    TPS := TPS[1]


strategy.exit('ExL','Long',stop = SLL,limit = TPL)
strategy.exit('ExS','Short',stop = SLS,limit = TPS)

Lev = input.int(defval=10,title='Levrage')
commision = input.float(defval=0.02,title='Commision %')
avgGrossProfit(val) =>
    Profit = 0.0
    if strategy.closedtrades.size(val)>0
        Profit := 100*(strategy.closedtrades.exit_price(val)-strategy.closedtrades.entry_price(val))/strategy.closedtrades.entry_price(val)
    else
        Profit :=100*(-strategy.closedtrades.exit_price(val)+strategy.closedtrades.entry_price(val))/strategy.closedtrades.entry_price(val)
    Profit :=  Profit - 2*commision
PrfPT = avgGrossProfit(strategy.closedtrades-1)
EquityVal=1.0
if strategy.closedtrades==0
    EquityVal:=1
else
    if strategy.closedtrades>strategy.closedtrades[1]
        EquityVal:=(1+Lev*PrfPT/100)*EquityVal[1]
    else
        EquityVal:=EquityVal[1]
var testTable = table.new(position = position.top_right, columns = 2, rows = 1, bgcolor = color.yellow, border_width = 1)
if barstate.isconfirmed
    table.cell(table_id = testTable, column = 0, row = 0, text = "Profit is ")
    table.cell(table_id = testTable, column = 1, row = 0, text = str.tostring((EquityVal-1)*100)+'%', bgcolor=color.teal)
// ===========================================================================================================================================================