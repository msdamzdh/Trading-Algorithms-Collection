//@version=5
strategy(title="MACD-CD", shorttitle="MACD-CD",initial_capital=100,
     default_qty_type=strategy.percent_of_equity,default_qty_value=100,
     commission_type=strategy.commission.percent,commission_value=0.02)
// Getting inputs
fast_length = input(title="Fast Length", defval=20)
slow_length = input(title="Slow Length", defval=50)
src = input(title="Source", defval=close)
signal_length = input.int(title="Signal Smoothing",  minval = 1, maxval = 50, defval = 9)
sma_source = input.string(title="Oscillator MA Type",  defval="EMA", options=["SMA", "EMA"])
sma_signal = input.string(title="Signal Line MA Type", defval="EMA", options=["SMA", "EMA"])
// Plot colors
col_macd = input(#2962FF, "MACD Line  ", group="Color Settings", inline="MACD")
col_signal = input(#FF6D00, "Signal Line  ", group="Color Settings", inline="Signal")
col_grow_above = input(#26A69A, "Above   Grow", group="Histogram", inline="Above")
col_fall_above = input(#B2DFDB, "Fall", group="Histogram", inline="Above")
col_grow_below = input(#FFCDD2, "Below Grow", group="Histogram", inline="Below")
col_fall_below = input(#FF5252, "Fall", group="Histogram", inline="Below")
// Calculating
fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal
hline(0, "Zero Line", color=color.new(#787B86, 50))
plot(hist, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below)))
plot(macd, title="MACD", color=col_macd)
plot(signal, title="Signal", color=col_signal)
// ===============================================Long
bcond1 = macd<0 and ta.crossover(macd,signal)
macdb = ta.valuewhen(bcond1,macd,1)
Cb = ta.valuewhen(bcond1,close,1)
BCond = bcond1 and macd>macdb and close<Cb ? true:false
bgcolor(color=BCond?color.new(color.green,60):na)
// =================================================
scond1 = macd>0 and ta.crossunder(macd,signal)
macds = ta.valuewhen(scond1,macd,1)
Cs = ta.valuewhen(scond1,close,1)
SCond = scond1 and macd<macds and close>Cs ? true:false
bgcolor(color=SCond?color.new(color.red,60):na)
// ======================================Trade
if BCond and high<ta.ema(close,20)
    strategy.entry('Long',strategy.long)
if SCond and low>ta.ema(close,20)
    strategy.entry('Short',strategy.short) 
avgGrossProfit(val) =>
    strategy.closedtrades.profit(val)-strategy.closedtrades.commission(val)
EquityVal = strategy.initial_capital
EquityVal := strategy.closedtrades==1 ?strategy.initial_capital*(1+avgGrossProfit(0)/strategy.initial_capital) : strategy.closedtrades>strategy.closedtrades[1] ? EquityVal[1]*(1+avgGrossProfit(strategy.closedtrades-1)/EquityVal[1]):EquityVal[1]
Profit = 100*(EquityVal-strategy.initial_capital)/strategy.initial_capital
Labels = array.new_label(0)
if barstate.islastconfirmedhistory
    if array.size(Labels)>1
        label.delete(array.get(Labels,0))
    Labels.push(label.new(x=bar_index+5,y=macd,text='Profit : '+str.tostring(Profit)+'%',color = color.black,textcolor = color.white))