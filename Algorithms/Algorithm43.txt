// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© aminmasood54

//@version=5
strategy("PivotCross",overlay = true,
         default_qty_type = strategy.percent_of_equity,default_qty_value = 100,
         commission_type = strategy.commission.percent,commission_value = 0.02)

Len1 = input.int(defval = 10,title = 'Length1')
Len2 = input.int(defval = 40,title = 'Length2')

h1 = 0.0
h2 = 0.0
l1 = 0.0
l2 = 0.0
h1 := nz(ta.pivothigh(high,Len1,Len1),h1[1])
h2 := nz(ta.pivothigh(high,Len2,Len2),h2[1])
l1 := nz(ta.pivotlow(low,Len1,Len1),l1[1])
l2 := nz(ta.pivotlow(low,Len2,Len2),l2[1])


plot(h1,color = color.red,linewidth = 1)
plot(h2,color = color.red,linewidth = 2)
plot(l1,color = color.green,linewidth = 1)
plot(l2,color = color.green,linewidth = 2)
// ===========================================
TPP = input.float(defval = 100,title = 'TPP',step = 0.1)
SLP = input.float(defval = 100,title = 'SLP',step = 0.1)
TradeLong = input.bool(false,'TradeLong')
TradeShort = input.bool(false,'TradeShort') 
SW = input.bool(false,'SwitchCond')
lCond = ta.crossover(l1,l2)
sCond = ta.crossover(h2,h1)
bgcolor(color = lCond?color.new(color.green,60):sCond?color.new(color.red,60):na)
LCond = TradeLong and lCond
SCond = TradeShort and sCond
LClose = ta.crossover(high,h2)
SClose = ta.crossunder(low,l2)
if SW
    a = LCond
    LCond := SCond
    SCond := a
    b = SClose
    SClose := LClose
    LClose := b
bgcolor(color = LCond?color.new(color.green,60):SCond?color.new(color.red,60):na)
SLL = 0.0
SLS = 0.0
TPL = 0.0
TPS = 0.0
if LCond
    strategy.entry('Long',strategy.long)
    SLL := close*(1-SLP/100)
    TPL := close*(1+TPP/100)
if strategy.position_size>0
    SLL := SLL[1]
    TPL := TPL[1]
if SCond
    strategy.entry('Short',strategy.short)
    SLS := close*(1+SLP/100)
    TPS := close*(1-TPP/100)
if strategy.position_size<0
    SLS := SLS[1]
    TPS := TPS[1]
if LClose
    strategy.close('Long')
if SClose
    strategy.close('Short')
strategy.exit('ExL','Long',limit = TPL,stop = SLL)
strategy.exit('ExS','Short',limit = TPS,stop = SLS)

Lev = input.int(defval=10,title='Levrage')
commision = input.float(defval=0.02,title='Commision %')
avgGrossProfit(val) =>
    Profit = 0.0
    if strategy.closedtrades.size(val)>0
        Profit := 100*(strategy.closedtrades.exit_price(val)-strategy.closedtrades.entry_price(val))/strategy.closedtrades.entry_price(val)
    else
        Profit :=100*(-strategy.closedtrades.exit_price(val)+strategy.closedtrades.entry_price(val))/strategy.closedtrades.entry_price(val)
    Profit :=  Profit - 2*commision
PrfPT = avgGrossProfit(strategy.closedtrades-1)
EquityVal=1.0
if strategy.closedtrades==0
    EquityVal:=1
else
    if strategy.closedtrades>strategy.closedtrades[1]
        EquityVal:=(1+Lev*PrfPT/100)*EquityVal[1]
    else
        EquityVal:=EquityVal[1]
var testTable = table.new(position = position.top_right, columns = 2, rows = 1, bgcolor = color.yellow, border_width = 1)
if barstate.isconfirmed
    table.cell(table_id = testTable, column = 0, row = 0, text = "Profit is ")
    table.cell(table_id = testTable, column = 1, row = 0, text = str.tostring((EquityVal-1)*100)+'%', bgcolor=color.teal)

